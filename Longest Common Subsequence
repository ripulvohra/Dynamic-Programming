#include<bits/stdc++.h>
using namespace std;
stack<char> s;
int lcs(string a,int i,int enda,string b,int j,int endb)
{
    
    if(i==enda+1||j==endb+1) return 0;
    
    if(a[i]==b[j]) return 1+ lcs(a,i+1,enda,b,j+1,endb);
    else  return max(lcs(a,i,enda,b,j+1,endb),lcs(a,i+1,enda,b,j,endb));
}
 
 
 int lcsdp(string a,int l1,string b,int l2)
{
    
    int t[l1+1][l2+1];
    
    for(int i=0;i<=l1;i++)
    {
        for(int j=0;j<=l2;j++)
        {
            
         if(i==0||j==0) t[i][j]=0;
         else if(a[i-1]==b[j-1]) t[i][j]=t[i-1][j-1]+1;
         else t[i][j]= max(t[i-1][j],t[i][j-1]);
        }
    }
int i=l1; int j=l2;
     while(1) 
     {
         if(i==0||j==0) break;
     else if(t[i][j]==t[i-1][j]) i--;
     else if(t[i][j]==t[i][j-1]) j--;
     else if(t[i][j]==1+t[i-1][j-1]) { s.push(a[i-1]); i--; j--;}
}
    return t[l1][l2];
}
int main()
{
    string a,b;
    cin>>a>>b;
    int l1=a.length();
    int l2=b.length();
 cout<<lcs(a,0,l1-1,b,0,l2-1)<<endl;   
 cout<<lcsdp(a,l1,b,l2)<<endl;
 while(!s.empty()) {cout<<s.top(); s.pop();}
 
}
