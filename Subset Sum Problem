#include<bits/stdc++.h>
using namespace std;
stack<int> s;
int subsum(int a[],int i,int n,int k)
{
 
 
    if(k==0) return 1;
    else if(i==n||k<0) return 0;
    
    if(subsum(a,i+1,n,k-a[i])==1||subsum(a,i+1,n,k)==1) return 1;
    else return 0;
}

bool subsumdp(int a[],int n,int k)
{
bool t[n+1][k+1];
for(int j=0;j<=k;j++) t[0][j]=0;
for(int i=0;i<=n;i++) t[i][0]=1;

for(int i=1;i<=n;i++)
{
    for(int j=1;j<=k;j++)
    {
        
    
         if(j<a[i-1]) t[i][j]= t[i-1][j];
        else  t[i][j]= t[i-1][j-a[i-1]]||t[i-1][j];
    }
}
  
   int i=n; int j=k;
    
    while(1)
    {
        
        if(i==0||j==0) break;
        
        else if(t[i][j]==t[i-1][j]) i--;
        else { s.push(a[i-1]);   j=j-a[i-1]; i--; }
    }
   
    return t[n][k];
    
    
    
}


int main()
{
    
    int n,k;
    cin>>n>>k;
    int a[n];
    for(int i=0;i<n;i++) cin>>a[i];
 cout<<subsum(a,0,n,k)<<endl;   
 cout<<subsumdp(a,n,k)<<endl;   
 
 while(!s.empty()) { cout<<s.top()<<" "; s.pop();}
}
